The BadWolf Project
Temporal Graph Store
19:00 21 Jun 2016
Tags: badwolf, graph store

Xavier Llor√†
SWE, Google Inc.
@badwolf_project
@xllora

* What will be cover today?

* Quick Overview

Describing the world using statements

Statements and how they map to graphs

Quick Graph manipulation concepts

Examples and demo

Road map

* What is a statement?

* A simple statement

A simple example of a statement

  Charles Darwin was born in Shrewsbury

A statement describes some truth about something

Deconstructing a statement

- _Subject_: The main actor on the statement (`Charles` `Darwin`)
- _Predicate_: The verb qualifying the statement (`born` `in`)
- _Object_: What is being predicated (`Shrewsbury`)

There are two entities (`Charles` `Darwin` and `Shrewsbury`) linked by a verb

* Another statement

This is also a simple statement, but with a twist

  Nikola Tesla knew Charles Darwin was born in Shrewsbury

A possible way of desconstructing the statement

- _Subject_: `Nikola` `Tesla`
- _Predicate_: `knew`
- _Object_: `Charles` `Darwin` `was` `born` `in` `Shrewsbury`

You can have entities in a statement, but you can also have other statements

The above example links an entity with another statement

* One last statement

One final statement

  Shrewsbury population 6,000

This statement is build using

- _Subject_: (`Shrewsbury`)
- _Predicate_: A property (`population`)
- _Object_: The value of the property (`6,000`)

A statement may not define a relation, but describe a _property_

The object of properties are primitive data types. Some examples

- _Text_
- _Numbers_
- `...`

* Statement summary

Relation expressing statement

- _Subject_: An entity or another statement
- _Predicate_: A verb
- _Object_: An entity or another statement

Property expressing statement

- _Subject_: An entity or another statement
- _Predicate_: A property (verb or property noun)
- _Object_: An entity or another statement


* Modeling statements with graphs

* statements change over time

* How can you manage all these statements?

* Managing graphs

* Managing data in the graphs

* Reasoning using queries

* Demo time

* Public usages

* Road map

* Updates to BQL (high priority)

.link https://github.com/google/badwolf/issues/45 Create derived statements via BQL `CONSTRUCT` query

.link https://github.com/google/badwolf/issues/52 Remove derived statements via BQL `DECONSTRUCT` query

* Low priority (a.k.a. Out of bandwidth)

Writing storage drivers

.link https://github.com/xllora/bwdrivers BwDrivers repository contains contributions (e.g. BoltDB)

Bridging a sister project

.link https://github.com/google/cayley Cayley as a backend for BadWolf
